{"version":3,"file":"./build/style-engine/index.min.js","mappings":"mBACA,IAAIA,EAAsB,CCA1B,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF,EAAyBT,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,wDCLvD,MAAM,EAA+BC,OAAe,OCAvCC,EAA4B,OC+BlC,SAASC,EACfC,EACAC,EACAC,EACAC,GAEA,MAAMC,GAAiChB,EAAAA,EAAAA,KAAKY,EAAOE,GAEnD,OAAOE,EACJ,CACA,CACCC,SAAUJ,MAAAA,OAAF,EAAEA,EAASI,SACnBtB,IAAKoB,EACLP,MAAOU,EAAyBF,KAGjC,GAcG,SAASG,EACfP,EACAC,EACAC,EACAM,GAEqB,IADrBC,EACqB,uDADY,CAAE,MAAO,QAAS,SAAU,QAE7D,MAAMC,GAAqCtB,EAAAA,EAAAA,KAAKY,EAAOE,GACvD,IAAOQ,EACN,MAAO,GAGR,MAAMC,EAA4B,GAClC,GAAyB,iBAAbD,EACXC,EAAMC,KAAM,CACXP,SAAUJ,MAAAA,OAAF,EAAEA,EAASI,SACnBtB,IAAKyB,EAASK,QACdjB,MAAOc,QAEF,CACN,MAAMI,EAAYL,EAAqBM,QACtC,CAAEC,EAAyBC,KAC1B,MAAMrB,EAA4BU,GACjClB,EAAAA,EAAAA,KAAKsB,EAAU,CAAEO,KAYlB,OAVKrB,GACJoB,EAAIJ,KAAM,CACTP,SAAUJ,MAAAA,OAAF,EAAEA,EAASI,SACnBtB,IAAKyB,MAAAA,OAAF,EAAEA,EAAUU,WAAWC,QACzB,KACAC,EAAYH,IAEbrB,MAAAA,IAGKoB,IAER,IAEDL,EAAMC,QAASE,GAGhB,OAAOH,EAUD,SAASL,EAAyBF,GACxC,MACuB,iBAAfA,GACPA,EAAWiB,WAAYvB,GAMf,aAJSM,EACfkB,MAAOxB,EAA0ByB,QACjCC,MDvHmD,KCwHnDC,KDvH+C,SC0H3CrB,EAUD,SAASgB,EAAT,GAAwD,IAAjCM,KAAgBC,GAAiB,EAC9D,OAAOD,EAAYE,cAAgBD,EAAKF,KAAM,IC1H/C,MAYMI,EAAS,CACdC,KAAM,SACNC,SAAU,CAAE/B,EAAcC,IAClBM,EACNP,EACAC,EACA,CAAE,SAAU,UACZ,CACCY,QAAS,eACTK,WAAY,kBAEb,CAAE,UAAW,WAAY,aAAc,iBA6BpCc,EAA2D,CApDnD,CACbF,KAAM,QACNC,SAAU,SACT/B,EACAC,GAGwB,IAFxBC,EAEwB,uDAFP,CAAE,SAAU,SAC7BC,EACwB,uDADN,cAElB,OAAOJ,EAAcC,EAAOC,EAASC,EAAMC,KAoBzB,CACnB2B,KAAM,QACNC,SAAU,SACT/B,EACAC,GAGwB,IAFxBC,EAEwB,uDAFP,CAAE,SAAU,SAC7BC,EACwB,uDADN,cAElB,OAAOJ,EAAcC,EAAOC,EAASC,EAAMC,KAI/B,CACb2B,KAAM,QACNC,SAAU,SACT/B,EACAC,GAGwB,IAFxBC,EAEwB,uDAFP,CAAE,SAAU,SAC7BC,EACwB,uDADN,cAElB,OAAOJ,EAAcC,EAAOC,EAASC,EAAMC,MAiBvC8B,EACHC,GACF,CAAElC,EAAcC,KAA2B,MAC1C,MAAMG,EAESJ,MAAAA,GAAH,UAAGA,EAAOmC,cAAV,aAAG,EAAiBD,GAEhC,OAAO9B,EAIA4B,EAAsCjB,QAC5C,CACCC,EACAoB,KAEA,MAAMrD,EAAMqD,EAAiBN,KAC7B,GACC1B,EAAWZ,eAAgBT,IACU,mBAA9BqD,EAAiBL,SACvB,CACD,MAAM5B,EAAW,SAASiB,EACzBc,KACKd,EAAYrC,KAClBiC,EAAIJ,QACAwB,EAAiBL,SACnB/B,EACAC,EACA,CAAE,SAAUiC,EAAoBnD,GAChCoB,IAIH,OAAOa,IAER,IA3BO,IA+BJqB,EAAY,CACjBP,KAAM,YACNC,SAAUE,EAA8B,QAGnCK,EAAc,CACnBR,KAAM,cACNC,SAAUE,EAA8B,UAGnCM,EAAe,CACpBT,KAAM,eACNC,SAAUE,EAA8B,WAGnCO,EAAa,CAClBV,KAAM,aACNC,SAAUE,EAA8B,SC5H5BQ,EAAmB,IDgI5BT,EACHH,EACAQ,EACAC,EACAC,EACAC,EEzIY,CACZV,KAAM,OACNC,SAAU,CAAE/B,EAAcC,IAClBF,EAAcC,EAAOC,EAAS,CAAE,QAAS,QAAU,UCH3C,CAChB6B,KAAM,WACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,QAAS,YACX,eCPgB,CAClB6B,KAAM,aACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,QAAS,cACX,oBCPW,CACb6B,KAAM,QACNC,SAAU,SACT/B,EACAC,GAGwB,IAFxBC,EAEwB,uDAFP,CAAE,UAAW,SAC9BC,EACwB,uDADN,eAElB,OAAOJ,EAAcC,EAAOC,EAASC,EAAMC,KAgBxB,CACpB2B,KAAM,QACNC,SAAU,SACT/B,EACAC,GAGwB,IAFxBC,EAEwB,uDAFP,CAAE,UAAW,SAC9BC,EACwB,uDADN,eAElB,OAAOJ,EAAcC,EAAOC,EAASC,EAAMC,KApB9B,CACd2B,KAAM,SACNC,SAAU,SACT/B,EACAC,GAGwB,IAFxBC,EAEwB,uDAFP,CAAE,UAAW,UAC9BC,EACwB,uDADN,eAElB,OAAOJ,EAAcC,EAAOC,EAASC,EAAMC,KAgB/B,CACb2B,KAAM,QACNC,SAAU,SACT/B,EACAC,GAGwB,IAFxBC,EAEwB,uDAFP,CAAE,UAAW,SAC9BC,EACwB,uDADN,eAElB,OAAOJ,EAAcC,EAAOC,EAASC,EAAMC,KC5C9B,CACd2B,KAAM,SACNC,SAAU,CAAE/B,EAAcC,IAClBM,EAAkBP,EAAOC,EAAS,CAAE,UAAW,UAAY,CACjEY,QAAS,SACTK,WAAY,cCLC,CACfY,KAAM,UACNC,SAAU,CAAE/B,EAAcC,IAClBM,EAAkBP,EAAOC,EAAS,CAAE,UAAW,WAAa,CAClEY,QAAS,UACTK,WAAY,eC+BI,CAClBY,KAAM,aACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,aAAc,cAChB,eA3Cc,CAChB6B,KAAM,WACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,aAAc,YAChB,aAKe,CACjB6B,KAAM,YACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,aAAc,aAChB,cAKgB,CAClB6B,KAAM,aACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,aAAc,cAChB,eAiBmB,CACrB6B,KAAM,gBACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,aAAc,iBAChB,kBAKgB,CAClB6B,KAAM,gBACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,aAAc,cAChB,eAKoB,CACtB6B,KAAM,iBACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,aAAc,kBAChB,mBAKmB,CACrB6B,KAAM,gBACNC,SAAU,CAAE/B,EAAcC,IAClBF,EACNC,EACAC,EACA,CAAE,aAAc,iBAChB,kBC3FY,CACd6B,KAAM,SACNC,SAAU,CAAE/B,EAAcC,IAClBF,EAAcC,EAAOC,EAAS,CAAE,UAAY,eCiB9C,SAASyC,EAAY1C,GAAmD,IAArCC,EAAqC,uDAAb,GACjE,MAAMU,EAAQgC,EAAa3C,EAAOC,GAGlC,GAAOA,MAAAA,IAAAA,EAASI,SAAW,CAC1B,MAAMuC,EAAwB,GAI9B,OAHAjC,EAAMkC,SAAWC,IAChBF,EAAYhC,KAAO,IAAGmC,EAAAA,EAAAA,WAAWD,EAAK/D,SAAY+D,EAAKlD,aAEjDgD,EAAYnB,KAAM,KAG1B,MAAMuB,GAAeC,EAAAA,EAAAA,SAAStC,EAAO,YAC/BuC,EAAgBjE,OAAOkE,KAAMH,GAAejC,QACjD,CAAEC,EAAeoC,KAChBpC,EAAIJ,KACF,GAAGwC,OAAmBJ,EAAcI,GACnCC,KACEP,GACA,IAAGC,EAAAA,EAAAA,WAAWD,EAAK/D,SAAY+D,EAAKlD,WAEtC6B,KAAM,UAEFT,IAER,IAGD,OAAOkC,EAAczB,KAAM,MAarB,SAASkB,EACf3C,GAEqB,IADrBC,EACqB,uDADG,GAExB,MAAMU,EAA4B,GAOlC,OANA8B,EAAiBI,SAAW/D,IACS,mBAAxBA,EAAWiD,UACtBpB,EAAMC,QAAS9B,EAAWiD,SAAU/B,EAAOC,OAItCU,G","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window \"lodash\"","webpack://wp/./packages/style-engine/build-module/styles/@wordpress/style-engine/src/styles/constants.ts","webpack://wp/./packages/style-engine/build-module/styles/@wordpress/style-engine/src/styles/utils.ts","webpack://wp/./packages/style-engine/build-module/styles/border/@wordpress/style-engine/src/styles/border/index.ts","webpack://wp/./packages/style-engine/build-module/styles/@wordpress/style-engine/src/styles/index.ts","webpack://wp/./packages/style-engine/build-module/styles/color/@wordpress/style-engine/src/styles/color/text.ts","webpack://wp/./packages/style-engine/build-module/styles/color/@wordpress/style-engine/src/styles/color/gradient.ts","webpack://wp/./packages/style-engine/build-module/styles/color/@wordpress/style-engine/src/styles/color/background.ts","webpack://wp/./packages/style-engine/build-module/styles/outline/@wordpress/style-engine/src/styles/outline/index.ts","webpack://wp/./packages/style-engine/build-module/styles/spacing/@wordpress/style-engine/src/styles/spacing/margin.ts","webpack://wp/./packages/style-engine/build-module/styles/spacing/@wordpress/style-engine/src/styles/spacing/padding.ts","webpack://wp/./packages/style-engine/build-module/styles/typography/@wordpress/style-engine/src/styles/typography/index.ts","webpack://wp/./packages/style-engine/build-module/styles/shadow/@wordpress/style-engine/src/styles/shadow/index.ts","webpack://wp/./packages/style-engine/build-module/@wordpress/style-engine/src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","export const VARIABLE_REFERENCE_PREFIX = 'var:';\nexport const VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\nexport const VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tCssRulesKeys,\n\tGeneratedCSSRule,\n\tStyle,\n\tBox,\n\tStyleOptions,\n} from '../types';\nimport {\n\tVARIABLE_REFERENCE_PREFIX,\n\tVARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE,\n\tVARIABLE_PATH_SEPARATOR_TOKEN_STYLE,\n} from './constants';\n\n/**\n * Returns a JSON representation of the generated CSS rules.\n *\n * @param  style   Style object.\n * @param  options Options object with settings to adjust how the styles are generated.\n * @param  path    An array of strings representing the path to the style value in the style object.\n * @param  ruleKey A CSS property key.\n *\n * @return GeneratedCSSRule[] CSS rules.\n */\nexport function generateRule(\n\tstyle: Style,\n\toptions: StyleOptions,\n\tpath: string[],\n\truleKey: string\n) {\n\tconst styleValue: string | undefined = get( style, path );\n\n\treturn styleValue\n\t\t? [\n\t\t\t\t{\n\t\t\t\t\tselector: options?.selector,\n\t\t\t\t\tkey: ruleKey,\n\t\t\t\t\tvalue: getCSSVarFromStyleValue( styleValue ),\n\t\t\t\t},\n\t\t  ]\n\t\t: [];\n}\n\n/**\n * Returns a JSON representation of the generated CSS rules taking into account box model properties, top, right, bottom, left.\n *\n * @param  style                Style object.\n * @param  options              Options object with settings to adjust how the styles are generated.\n * @param  path                 An array of strings representing the path to the style value in the style object.\n * @param  ruleKeys             An array of CSS property keys and patterns.\n * @param  individualProperties The \"sides\" or individual properties for which to generate rules.\n *\n * @return GeneratedCSSRule[]  CSS rules.\n */\nexport function generateBoxRules(\n\tstyle: Style,\n\toptions: StyleOptions,\n\tpath: string[],\n\truleKeys: CssRulesKeys,\n\tindividualProperties: string[] = [ 'top', 'right', 'bottom', 'left' ]\n): GeneratedCSSRule[] {\n\tconst boxStyle: Box | string | undefined = get( style, path );\n\tif ( ! boxStyle ) {\n\t\treturn [];\n\t}\n\n\tconst rules: GeneratedCSSRule[] = [];\n\tif ( typeof boxStyle === 'string' ) {\n\t\trules.push( {\n\t\t\tselector: options?.selector,\n\t\t\tkey: ruleKeys.default,\n\t\t\tvalue: boxStyle,\n\t\t} );\n\t} else {\n\t\tconst sideRules = individualProperties.reduce(\n\t\t\t( acc: GeneratedCSSRule[], side: string ) => {\n\t\t\t\tconst value: string | undefined = getCSSVarFromStyleValue(\n\t\t\t\t\tget( boxStyle, [ side ] )\n\t\t\t\t);\n\t\t\t\tif ( value ) {\n\t\t\t\t\tacc.push( {\n\t\t\t\t\t\tselector: options?.selector,\n\t\t\t\t\t\tkey: ruleKeys?.individual.replace(\n\t\t\t\t\t\t\t'%s',\n\t\t\t\t\t\t\tupperFirst( side )\n\t\t\t\t\t\t),\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t\trules.push( ...sideRules );\n\t}\n\n\treturn rules;\n}\n\n/**\n * Returns a CSS var value from incoming style value following the pattern `var:description|context|slug`.\n *\n * @param  styleValue A raw style value.\n *\n * @return string A CSS var value.\n */\nexport function getCSSVarFromStyleValue( styleValue: string ): string {\n\tif (\n\t\ttypeof styleValue === 'string' &&\n\t\tstyleValue.startsWith( VARIABLE_REFERENCE_PREFIX )\n\t) {\n\t\tconst variable = styleValue\n\t\t\t.slice( VARIABLE_REFERENCE_PREFIX.length )\n\t\t\t.split( VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE )\n\t\t\t.join( VARIABLE_PATH_SEPARATOR_TOKEN_STYLE );\n\t\treturn `var(--wp--${ variable })`;\n\t}\n\treturn styleValue;\n}\n\n/**\n * Capitalizes the first letter in a string.\n *\n * @param {string} str The string whose first letter the function will capitalize.\n *\n * @return string A CSS var value.\n */\nexport function upperFirst( [ firstLetter, ...rest ]: string ) {\n\treturn firstLetter.toUpperCase() + rest.join( '' );\n}\n","/**\n * Internal dependencies\n */\nimport type {\n\tBorderIndividualStyles,\n\tBorderIndividualProperty,\n\tGeneratedCSSRule,\n\tStyle,\n\tStyleDefinition,\n\tStyleOptions,\n} from '../../types';\nimport { generateRule, generateBoxRules, upperFirst } from '../utils';\n\nconst color = {\n\tname: 'color',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'border', 'color' ],\n\t\truleKey: string = 'borderColor'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst radius = {\n\tname: 'radius',\n\tgenerate: ( style: Style, options: StyleOptions ): GeneratedCSSRule[] => {\n\t\treturn generateBoxRules(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'border', 'radius' ],\n\t\t\t{\n\t\t\t\tdefault: 'borderRadius',\n\t\t\t\tindividual: 'border%sRadius',\n\t\t\t},\n\t\t\t[ 'topLeft', 'topRight', 'bottomLeft', 'bottomRight' ]\n\t\t);\n\t},\n};\n\nconst borderStyle = {\n\tname: 'style',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'border', 'style' ],\n\t\truleKey: string = 'borderStyle'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst width = {\n\tname: 'width',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'border', 'width' ],\n\t\truleKey: string = 'borderWidth'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst borderDefinitionsWithIndividualStyles: StyleDefinition[] = [\n\tcolor,\n\tborderStyle,\n\twidth,\n];\n\n/**\n * Returns a curried generator function with the individual border property ('top' | 'right' | 'bottom' | 'left') baked in.\n *\n * @param  individualProperty Individual border property ('top' | 'right' | 'bottom' | 'left').\n *\n * @return StyleDefinition[ 'generate' ]\n */\nconst createBorderGenerateFunction =\n\t( individualProperty: BorderIndividualProperty ) =>\n\t( style: Style, options: StyleOptions ) => {\n\t\tconst styleValue:\n\t\t\t| BorderIndividualStyles< typeof individualProperty >\n\t\t\t| undefined = style?.border?.[ individualProperty ];\n\n\t\tif ( ! styleValue ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn borderDefinitionsWithIndividualStyles.reduce(\n\t\t\t(\n\t\t\t\tacc: GeneratedCSSRule[],\n\t\t\t\tborderDefinition: StyleDefinition\n\t\t\t): GeneratedCSSRule[] => {\n\t\t\t\tconst key = borderDefinition.name;\n\t\t\t\tif (\n\t\t\t\t\tstyleValue.hasOwnProperty( key ) &&\n\t\t\t\t\ttypeof borderDefinition.generate === 'function'\n\t\t\t\t) {\n\t\t\t\t\tconst ruleKey = `border${ upperFirst(\n\t\t\t\t\t\tindividualProperty\n\t\t\t\t\t) }${ upperFirst( key ) }`;\n\t\t\t\t\tacc.push(\n\t\t\t\t\t\t...borderDefinition.generate(\n\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t[ 'border', individualProperty, key ],\n\t\t\t\t\t\t\truleKey\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t};\n\nconst borderTop = {\n\tname: 'borderTop',\n\tgenerate: createBorderGenerateFunction( 'top' ),\n};\n\nconst borderRight = {\n\tname: 'borderRight',\n\tgenerate: createBorderGenerateFunction( 'right' ),\n};\n\nconst borderBottom = {\n\tname: 'borderBottom',\n\tgenerate: createBorderGenerateFunction( 'bottom' ),\n};\n\nconst borderLeft = {\n\tname: 'borderLeft',\n\tgenerate: createBorderGenerateFunction( 'left' ),\n};\n\nexport default [\n\t...borderDefinitionsWithIndividualStyles,\n\tradius,\n\tborderTop,\n\tborderRight,\n\tborderBottom,\n\tborderLeft,\n];\n","/**\n * Internal dependencies\n */\nimport border from './border';\nimport color from './color';\nimport shadow from './shadow';\nimport outline from './outline';\nimport spacing from './spacing';\nimport typography from './typography';\n\nexport const styleDefinitions = [\n\t...border,\n\t...color,\n\t...outline,\n\t...spacing,\n\t...typography,\n\t...shadow,\n];\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst text = {\n\tname: 'text',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule( style, options, [ 'color', 'text' ], 'color' );\n\t},\n};\n\nexport default text;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst gradient = {\n\tname: 'gradient',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'color', 'gradient' ],\n\t\t\t'background'\n\t\t);\n\t},\n};\n\nexport default gradient;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst background = {\n\tname: 'background',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'color', 'background' ],\n\t\t\t'backgroundColor'\n\t\t);\n\t},\n};\n\nexport default background;\n","/**\n * Internal dependencies\n */\nimport type { GeneratedCSSRule, Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst color = {\n\tname: 'color',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'outline', 'color' ],\n\t\truleKey: string = 'outlineColor'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst offset = {\n\tname: 'offset',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'outline', 'offset' ],\n\t\truleKey: string = 'outlineColor'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst outlineStyle = {\n\tname: 'style',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'outline', 'style' ],\n\t\truleKey: string = 'outlineStyle'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst width = {\n\tname: 'width',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'outline', 'width' ],\n\t\truleKey: string = 'outlineWidth'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nexport default [ color, outlineStyle, offset, width ];\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateBoxRules } from '../utils';\n\nconst margin = {\n\tname: 'margin',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateBoxRules( style, options, [ 'spacing', 'margin' ], {\n\t\t\tdefault: 'margin',\n\t\t\tindividual: 'margin%s',\n\t\t} );\n\t},\n};\n\nexport default margin;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateBoxRules } from '../utils';\n\nconst padding = {\n\tname: 'padding',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateBoxRules( style, options, [ 'spacing', 'padding' ], {\n\t\t\tdefault: 'padding',\n\t\t\tindividual: 'padding%s',\n\t\t} );\n\t},\n};\n\nexport default padding;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst fontSize = {\n\tname: 'fontSize',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'fontSize' ],\n\t\t\t'fontSize'\n\t\t);\n\t},\n};\n\nconst fontStyle = {\n\tname: 'fontStyle',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'fontStyle' ],\n\t\t\t'fontStyle'\n\t\t);\n\t},\n};\n\nconst fontWeight = {\n\tname: 'fontWeight',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'fontWeight' ],\n\t\t\t'fontWeight'\n\t\t);\n\t},\n};\n\nconst fontFamily = {\n\tname: 'fontFamily',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'fontFamily' ],\n\t\t\t'fontFamily'\n\t\t);\n\t},\n};\n\nconst letterSpacing = {\n\tname: 'letterSpacing',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'letterSpacing' ],\n\t\t\t'letterSpacing'\n\t\t);\n\t},\n};\n\nconst lineHeight = {\n\tname: 'letterSpacing',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'lineHeight' ],\n\t\t\t'lineHeight'\n\t\t);\n\t},\n};\n\nconst textDecoration = {\n\tname: 'textDecoration',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'textDecoration' ],\n\t\t\t'textDecoration'\n\t\t);\n\t},\n};\n\nconst textTransform = {\n\tname: 'textTransform',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'textTransform' ],\n\t\t\t'textTransform'\n\t\t);\n\t},\n};\n\nexport default [\n\tfontFamily,\n\tfontSize,\n\tfontStyle,\n\tfontWeight,\n\tletterSpacing,\n\tlineHeight,\n\ttextDecoration,\n\ttextTransform,\n];\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst shadow = {\n\tname: 'shadow',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule( style, options, [ 'shadow' ], 'boxShadow' );\n\t},\n};\n\nexport default [ shadow ];\n","/**\n * External dependencies\n */\nimport { groupBy, kebabCase } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tStyle,\n\tStyleOptions,\n\tGeneratedCSSRule,\n\tStyleDefinition,\n} from './types';\nimport { styleDefinitions } from './styles';\n\n/**\n * Generates a stylesheet for a given style object and selector.\n *\n * @since 6.1.0 Introduced in WordPress core.\n *\n * @param  style   Style object, for example, the value of a block's attributes.style object or the top level styles in theme.json\n * @param  options Options object with settings to adjust how the styles are generated.\n *\n * @return A generated stylesheet or inline style declarations.\n */\nexport function compileCSS( style: Style, options: StyleOptions = {} ): string {\n\tconst rules = getCSSRules( style, options );\n\n\t// If no selector is provided, treat generated rules as inline styles to be returned as a single string.\n\tif ( ! options?.selector ) {\n\t\tconst inlineRules: string[] = [];\n\t\trules.forEach( ( rule ) => {\n\t\t\tinlineRules.push( `${ kebabCase( rule.key ) }: ${ rule.value };` );\n\t\t} );\n\t\treturn inlineRules.join( ' ' );\n\t}\n\n\tconst groupedRules = groupBy( rules, 'selector' );\n\tconst selectorRules = Object.keys( groupedRules ).reduce(\n\t\t( acc: string[], subSelector: string ) => {\n\t\t\tacc.push(\n\t\t\t\t`${ subSelector } { ${ groupedRules[ subSelector ]\n\t\t\t\t\t.map(\n\t\t\t\t\t\t( rule: GeneratedCSSRule ) =>\n\t\t\t\t\t\t\t`${ kebabCase( rule.key ) }: ${ rule.value };`\n\t\t\t\t\t)\n\t\t\t\t\t.join( ' ' ) } }`\n\t\t\t);\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\n\treturn selectorRules.join( '\\n' );\n}\n\n/**\n * Returns a JSON representation of the generated CSS rules.\n *\n * @since 6.1.0 Introduced in WordPress core.\n *\n * @param  style   Style object, for example, the value of a block's attributes.style object or the top level styles in theme.json\n * @param  options Options object with settings to adjust how the styles are generated.\n *\n * @return A collection of objects containing the selector, if any, the CSS property key (camelcase) and parsed CSS value.\n */\nexport function getCSSRules(\n\tstyle: Style,\n\toptions: StyleOptions = {}\n): GeneratedCSSRule[] {\n\tconst rules: GeneratedCSSRule[] = [];\n\tstyleDefinitions.forEach( ( definition: StyleDefinition ) => {\n\t\tif ( typeof definition.generate === 'function' ) {\n\t\t\trules.push( ...definition.generate( style, options ) );\n\t\t}\n\t} );\n\n\treturn rules;\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","VARIABLE_REFERENCE_PREFIX","generateRule","style","options","path","ruleKey","styleValue","selector","getCSSVarFromStyleValue","generateBoxRules","ruleKeys","individualProperties","boxStyle","rules","push","default","sideRules","reduce","acc","side","individual","replace","upperFirst","startsWith","slice","length","split","join","firstLetter","rest","toUpperCase","radius","name","generate","borderDefinitionsWithIndividualStyles","createBorderGenerateFunction","individualProperty","border","borderDefinition","borderTop","borderRight","borderBottom","borderLeft","styleDefinitions","compileCSS","getCSSRules","inlineRules","forEach","rule","kebabCase","groupedRules","groupBy","selectorRules","keys","subSelector","map"],"sourceRoot":""}